GET : Request Body 없음 -> Query String 구성
 - 브라우저 주소
 - a 태그
 - form 태그
 - 302 redirect


POST : Request Body 구성
 - form 태그



<Spring 세팅>
그전에 자바 17버전 이상 (Spring version '3.x.x' 조건임)

1. STS - Spring용 이클립스 (톰캣이 자동 연동되어 있음)
다운로드 사이트 -> Spring Tools 4 for Eclipse (Window용, jar 파일)

+) jar파일은 압축파일로 사용되기도 함
압축 푸는 법 2가지
1. 커피 모양 아이콘 => 더블 클릭하면 압축 자동 풀림
2. 반디집으로 압축 풀기 => contents.zip => 다시 반디집 풀기
=> 최종적으로 sts~.release 폴더만 있으면됨



6. 플러그인 설치 및 인코딩
Helop > Eclipse Marketplace
'Java and web' 검색
마지막에 jsp로 끝나는지 확인(json으로 끝나면 안됨)
> Install

뜨는 창에서 PGP 두개 선택하고 trust select
> 'restart now'

그리고 인코딩 4개하면 됨



3. 프로젝트 만들기
File > Spring Starter Project 클릭.

1)
Name => 프로젝트 이름 (SpringExample, SpringQuiz 로 만들기)
Java Version => 그대로 17. 더 높은버전 써도 알아서 낮춰서 써줌
Group, Package => com.text 같은 프로젝트 기본 경로 (지금은 com.example / com.quiz)

> Next 클릭

2) Dependencies : 자주쓰는 라이브러리 설치
(나중에도 설치할 수 있음)
필수설치:
Developer Tools > Spring Boot DevTools
Developer Tools > Spring Configuration Processor
(나중에 Lombok도 설치, 지금X)

SQL > MySQL Driver (JDBC 연결하는 역할 등...)
(나중에 Spring Data JPA, MyBatis Framework 추가, 지금X)
(MyBatis Framework 선택이 비활성화되는 이유 -> JPA로 넘어가는 추세라서 비권장)

Web > Spring Web

> Finish

>> 이제 오른쪽 하단에서 잘 설치되고 있는지 확인


4. 프로젝트 > build.gradle
=> Maven, Gradle-Kotlin, Gradle-Groovy은 빌드 방식임. Maven에서 Gradle로 넘어가는 중
(우리는 Gradle-Groovy로 사용, Kotlin은 안드로이드 앱 개발에서 주로 사용)

plugins {} :  에서 version '3.x.x' 확인
dependencies {} : 아까 다운받은 라이브러리와 기타 라이브러리들. => 잘 설치되었는지 확인

SpringExampleApplication.java 가장 위에서 Base Package를 확인할 수 있음
-- 모든 파일들은 Base Package 아래 있어야 인식됨
com.example  <= Base Package
com.TestController.java <= 인식X
com.example.foo.TestController.java <= 인식O

-> 모든 요청이 처음 도달하는 곳 : Controller (Servlet 대신임)
-> 프로젝트 계층 구조 : Hierechical로 바꾸고 하기


5. Boot Dashboard (이전의 Servers 역할)
(잃어버리면 Window -> show view -> others 에서 검색)

만약 어느날 갑자기 서버가 안 켜지면?
-> 마론달 제일 아래 '에러 잡기' 수행했어야함

Dashboard에서 서버 켜고 http://localhost:8080/test1로 접속


>> 프로젝트명은 바꾸면 안됨. 지우고 다시 설치해야함

>> 같은 포트번호는 한 컴퓨터에서 사용불가
ex) Servlet 포트 번호와 Spring 포트 번호가 같다면 중복실행 안됨
Servlet : 80, Spring: 8080이면 포트 번호가 달라서 가능

>> 깃헙은 DB 연동 후 사용하는게 안정적임

------------------------------------

Spring Container
 -> Spring bean(객체)


Java bean => new Person();
  이렇게 힙영역에 들어가 있는 자바 객체를 Java bean이라고 함
Spring bean => @Controller 어노테이션으로 객체 생성
  스프링 컨테이너에 들어가는 객체(힙 영역)
  그래서 @Controller 가 없으면 404뜸. 애초에 컨테이너에 없는 객체라서.


input => request
output => response























